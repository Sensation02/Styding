using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace _10.Області_видимості_та_їх_конфлікти
{
    internal class leson
    {
        static int a = 11;
        static int b = 12; //ця перемінна може бути використана далі в методах (всіх де треба)

        static void NumberOut()
        {
            int b = 12; //ця перемінна тільки в цьому методі (в області видимості)
            Console.WriteLine(b);
            //тут інфа буде виводитися та яка описана в цьому ж методі (тобто "12")
        }
        static void Main(string[] args)
        {
            //область видимості або контекст перемінної; конфлікти областей видимості

            for (int i = 0; i < 10; i++)
            {

            }
            //перемінна "і" видима тільки в циклі і це стосується всього що всередині циклу
            //і це стосується всіх конструкцій, навіть методів
            i++; //тут вже не видно її і користуватися нею неможливо;
                 //тобто цикл Фор це область видимості перемінної "і"

            //в методах, щоб повернути якусь інформацію в основний код треба користуватися "return"

            //якщо щось знаходиться поза методом, тобто в класі, треба..
            //..щоб він був статичним і треба звернутися до тієї премінної
            //така перемінна буде доступна скрізь по класу (тобто області видимості)

            Console.WriteLine(b);
            //тут ми звертаємося до перемінної, але цих перемінних дві..
            //тому інформація сюди йде звідки її видно (не з метода, там не видно, а з класу, де видно)
            //тобто та перемінна яка знаходиться поза метода (просто в класі)
            //знаходиться в області видимості для всіх методів, що знаходяться в класі

        }
    }
}
